*KyleVimPython.txt* Handy vim functionality for everyday use

 _  __     _    __     ___               ____        _   _                 	~
| |/ /   _| | __\ \   / (_)_ __ ___     |  _ \ _   _| |_| |__   ___  _ __  	~
| ' / | | | |/ _ \ \ / /| | '_ ` _ \    | |_) | | | | __| '_ \ / _ \| '_ \ 	~
| . \ |_| | |  __/\ V / | | | | | | |   |  __/| |_| | |_| | | | (_) | | | |	~
|_|\_\__, |_|\___| \_/  |_|_| |_| |_|___|_|    \__, |\__|_| |_|\___/|_| |_|	~
     |___/                         |_____|     |___/                       	~
										~

====================================================================
CONTENTS                                       *KyleVimPythonContents*

    1. Usage ................ |KyleVimPythonUsage|
    	1.1 Default Behaviour |KyleVimPythonDefault|
	    1.2 Commands ........ |KyleVimPythonCommands|
	    1.3 Syntax Checking . |KyleVimPythonSyntax|
    2. Mappings ............. |KyleVimPythonMappings|
    3. Configuration ........ |KyleVimPythonConfiguration|
	    3.1 Syntax Check Conf |KyleVimPythonSyntaxConfig|
	    3.2 Color Column Conf |KyleVimPythonColorCol|
	    3.3 Line Number Hl .. |KyleVimPythonLineHl|
    4. License .............. |KyleVimPythonLicense|
    5. Bugs ................. |KyleVimPythonBugs|
    6. Contributing ......... |KyleVimPythonContributing|
    7. Changelog ............ |KyleVimPythonChangelog|
    8. Credits .............. |KyleVimPythonCredits|

====================================================================
Section 1: Usage                                  *KyleVimPythonUsage*

--------------------------------------------------------------------
1.1: Default Behaviour				*KyleVimPythonDefault*

KyleVimPython contains some automatic settings for easy editing of 
python files with PEP8 style. The plugin will set the tab character
to enter four spaces, rather than the tab character.  It will also
enable smart indentation and python syntax highlighting.

  
New python files created with vim will automatically have a file header
inserted at the top of the file.  This header looks like this:

"""
File Name: file.txt (auto populated)

Authors: {% Authors %}

Date: The current date (auto populated)

Description: {% Description %}
"""

You can replace the relevant details as you need.  If you have
KyleVim installed (highly recommended) then you can use the
quick inserts functionality to easily replace the file header
Author and Description.


-----------------------------------------------------------------
1.2: Commands			  	    *KyleVimPythonCommands*

KyleVimPython defines a few commands that help with python
development:

                                                    *InsertDocstring*
InsertDocstring(lineNum)	Insert an autofilled docstring for the 
				            function or class on the line indicated
				            by lineNum. If the line at lineNum is 
                            a `raise Exception()` clause, the exception
                            will be added to the docstring, and the
                            docstring will be created if it does not 
                            exist.
			 

-------------------------------------------------------------------
1.3: Syntax Checking				*KyleVimPythonSyntax*

KyleVimPython will run syntax and PEP8 styleguide checks on your code.
This will be run whenever a new buffer is opened, and when the current
buffer is saved.

Syntax errors will be indicated by a red '!', while PEP8 style warnings
are indicated by a yellow '8'.  The error messages detected will be stored
in the quickfix list, which can be access using the :copen command.
When viewing the quickfix list, you can jump to an error by higlighting 
it and pressing the enter key.

Syntax checking requires pycodestyle and pyflakes to be installed.
See |KyleVimPythonSyntaxConfig| for details on how to change this 
command.


====================================================================
Section 2: Mappings                            *KyleVimPythonMappings*

<C-b>       This will call the InsertDocstring
            function with the line at the cursor as the line number.

<F4>	    The F4 key will initiate a search for functions and classes
	    that do not contain docstrings.  Press F4 and the cursor will
	    move to the next function or class declaration that does not have
            a docstring

====================================================================
Section 3: Configuration		   *KyleVimPythonConfiguraion*

--------------------------------------------------------------------
3.1: Syntax Check Config		   *KyleVimPythonSyntaxConfig*

Syntax checking requires pycodestyle and pyflakes to be installed.
If you have these installed in a strange place, you will need to 
tell the plugin by adding these lines to your .vimrc as needed:

	'let g:pep8_command = "<path_to_pycodestyle>"'
	'let g:pyflake_command = "<path_to_pyflakes>"'


--------------------------------------------------------------------
3.2: Color Column Config		       *KyleVimPythonColorCol*

By default, the plugin will display a column at 79 characters to show
the max line length that follows the PEP8 standard.  If you wish to
disable this visual line, simply add the following to your .vimrc:

	'let g:KyleVimPython_Disable_ColorCol = 1' 

---------------------------------------------------------------------
3.3: Line Number Highlight Config                *KyleVimPythonLineHl*

By default, the current line number is highlighted in the line number 
gutter.  To disable this, add the following to your .vimrc:

	'let g:KyleVimPython_Disable_NumberHl = 1'

====================================================================
Section 4: License                              *KyleVimPythonLicense*

KyleVim is available under the MIT license.  More information is 
available at: https://choosealicense.com/licenses/mit/

====================================================================
Section 5: Bugs                                    *KyleVimPythonBugs*

I am currently not aware of any bugs, but I'm sure there are a few!

If you find any issues, please report them using the 'Issues' tab at
the main repository, or click this link:
https://github.com/KyleS22/KyleVim_Python/issues

A good bug report is as specific and descriptive as possible.  
Please include as many details about your setup as possible.

Thanks!

====================================================================
Section 6: Contributing			   *KyleVimPythonContributing*

The main repository can be found at 
https://github.com/KyleS22/KyleVim_Python

If you would like to make a contribution, please create a new branch
for your feature and create a pull request when ready.

Thanks!


====================================================================
Section 7: Changelog                          *KyleVimPythonChangelog*

0.4.0
	- Changed ugly error highlights to a more sensible icon in the line number gutter

0.3.0
	- Add visual column to indicate end of PEP8 line length
0.2.1
	- Fix bug with checking PEP8 style on opening files
	- Changed error foreground colour for readability

0.2.0
	- Fix incorrect version number according to semantic versioning
0.1.2
	- Easily add exeptions to docstrings
    	- Add documentation search
	- Add workaround for IOError bug with flake8

0.1.1
	- Fix ']' bug with syntax error highlights
	- Add a check for the current file to exist before trying
		to run syntax and pep8 checks
	- 'self' parameters are now ignored in class function docstrings, but not others
	- Function definitions split over multiple lines now have correct docstrings
	- Function docstrings for functions with no parameters no longer add a blank parameter to the docstring
0.1.0
	- Automatic PEP8 and syntax error checking

0.0.0
	- Automatic file headers 
    	- Auto docstrings 

====================================================================
Section 8: Credits                              *KyleVimPythonCredits*


Written and maintained by Kyle Seidenthal
